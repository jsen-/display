pub trait MonoFont {
    const CHAR_WIDTH: u8;
    const CHAR_HEIGHT: u8;
    fn data() -> &'static [u8];
}

pub struct ThisFont;
impl MonoFont for ThisFont {
    const CHAR_HEIGHT: u8 = 8;
    const CHAR_WIDTH: u8 = 8;
    fn data() -> &'static [u8] {
        &DATA
    }
}

static DATA: [u8; 96 * 8] = [
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //     0
    0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, // !   1
    0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // "   2
    0x00, 0x12, 0x3f, 0x12, 0x12, 0x3f, 0x12, 0x00, // #   3
    0x00, 0x2e, 0x2a, 0x7f, 0x2a, 0x3a, 0x00, 0x00, // $   4
    0x00, 0x23, 0x13, 0x08, 0x04, 0x32, 0x31, 0x00, // %   5
    0x00, 0x10, 0x2a, 0x25, 0x2a, 0x10, 0x20, 0x00, // &   6
    0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // '   7
    0x00, 0x1e, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, // (   8
    0x00, 0x21, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, // )   9
    0x00, 0x08, 0x2a, 0x1c, 0x2a, 0x08, 0x00, 0x00, // *   10
    0x00, 0x08, 0x08, 0x3e, 0x08, 0x08, 0x00, 0x00, // +   11
    0x00, 0x80, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, // ,   12
    0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, // -   13
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, // .   14
    0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x00, // /   15
    0x00, 0x1e, 0x31, 0x29, 0x25, 0x23, 0x1e, 0x00, // 0   16
    0x00, 0x22, 0x21, 0x3f, 0x20, 0x20, 0x20, 0x00, // 1   17
    0x00, 0x32, 0x29, 0x29, 0x29, 0x29, 0x26, 0x00, // 2   18
    0x00, 0x12, 0x21, 0x21, 0x25, 0x25, 0x1a, 0x00, // 3   19
    0x00, 0x18, 0x14, 0x12, 0x3f, 0x10, 0x00, 0x00, // 4   20
    0x00, 0x17, 0x25, 0x25, 0x25, 0x25, 0x19, 0x00, // 5   21
    0x00, 0x1e, 0x25, 0x25, 0x25, 0x25, 0x18, 0x00, // 6   22
    0x00, 0x01, 0x01, 0x31, 0x09, 0x05, 0x03, 0x00, // 7   23
    0x00, 0x1a, 0x25, 0x25, 0x25, 0x25, 0x1a, 0x00, // 8   24
    0x00, 0x06, 0x29, 0x29, 0x29, 0x29, 0x1e, 0x00, // 9   25
    0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // :   26
    0x00, 0x80, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, // ;   27
    0x00, 0x08, 0x14, 0x22, 0x00, 0x00, 0x00, 0x00, // <   28
    0x00, 0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 0x00, // =   29
    0x00, 0x22, 0x14, 0x08, 0x00, 0x00, 0x00, 0x00, // >   30
    0x00, 0x02, 0x01, 0x01, 0x29, 0x05, 0x02, 0x00, // ?   31
    0x00, 0x1e, 0x21, 0x2d, 0x2b, 0x2d, 0x0e, 0x00, // @   32
    0x00, 0x3e, 0x09, 0x09, 0x09, 0x09, 0x3e, 0x00, // A   33
    0x00, 0x3f, 0x25, 0x25, 0x25, 0x25, 0x1a, 0x00, // B   34
    0x00, 0x1e, 0x21, 0x21, 0x21, 0x21, 0x12, 0x00, // C   35
    0x00, 0x3f, 0x21, 0x21, 0x21, 0x12, 0x0c, 0x00, // D   36
    0x00, 0x3f, 0x25, 0x25, 0x25, 0x25, 0x21, 0x00, // E   37
    0x00, 0x3f, 0x05, 0x05, 0x05, 0x05, 0x01, 0x00, // F
    0x00, 0x1e, 0x21, 0x21, 0x21, 0x29, 0x1a, 0x00, // G
    0x00, 0x3f, 0x04, 0x04, 0x04, 0x04, 0x3f, 0x00, // H
    0x00, 0x21, 0x21, 0x3f, 0x21, 0x21, 0x00, 0x00, // I
    0x00, 0x10, 0x20, 0x20, 0x20, 0x20, 0x1f, 0x00, // J
    0x00, 0x3f, 0x04, 0x0c, 0x0a, 0x11, 0x20, 0x00, // K
    0x00, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, // L
    0x00, 0x3f, 0x02, 0x04, 0x04, 0x02, 0x3f, 0x00, // M
    0x00, 0x3f, 0x02, 0x04, 0x08, 0x10, 0x3f, 0x00, // N
    0x00, 0x1e, 0x21, 0x21, 0x21, 0x21, 0x1e, 0x00, // O
    0x00, 0x3f, 0x09, 0x09, 0x09, 0x09, 0x06, 0x00, // P
    0x00, 0x1e, 0x21, 0x29, 0x31, 0x21, 0x5e, 0x00, // Q
    0x00, 0x3f, 0x09, 0x09, 0x09, 0x19, 0x26, 0x00, // R
    0x00, 0x12, 0x25, 0x25, 0x25, 0x25, 0x18, 0x00, // S
    0x00, 0x01, 0x01, 0x01, 0x3f, 0x01, 0x01, 0x00, // T
    0x00, 0x1f, 0x20, 0x20, 0x20, 0x20, 0x1f, 0x00, // U
    0x00, 0x0f, 0x10, 0x20, 0x20, 0x10, 0x0f, 0x00, // V
    0x00, 0x1f, 0x20, 0x10, 0x10, 0x20, 0x1f, 0x00, // W
    0x00, 0x21, 0x12, 0x0c, 0x0c, 0x12, 0x21, 0x00, // X
    0x00, 0x01, 0x02, 0x3c, 0x02, 0x01, 0x00, 0x00, // Y
    0x00, 0x21, 0x31, 0x29, 0x25, 0x23, 0x21, 0x00, // Z
    0x00, 0x3f, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, // [
    0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00, // \
    0x00, 0x21, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, // ]
    0x00, 0x04, 0x02, 0x3f, 0x02, 0x04, 0x00, 0x00, // ^
    0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, // _
    0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // `
    0x00, 0x10, 0x2a, 0x2a, 0x2a, 0x3c, 0x00, 0x00, // a
    0x00, 0x3f, 0x24, 0x24, 0x24, 0x18, 0x00, 0x00, // b
    0x00, 0x1c, 0x22, 0x22, 0x22, 0x00, 0x00, 0x00, // c
    0x00, 0x18, 0x24, 0x24, 0x24, 0x3f, 0x00, 0x00, // d
    0x00, 0x1c, 0x2a, 0x2a, 0x2a, 0x24, 0x00, 0x00, // e
    0x00, 0x00, 0x3e, 0x05, 0x01, 0x00, 0x00, 0x00, // f
    0x00, 0x18, 0xa4, 0xa4, 0xa4, 0x7c, 0x00, 0x00, // g
    0x00, 0x3f, 0x04, 0x04, 0x04, 0x38, 0x00, 0x00, // h
    0x00, 0x00, 0x24, 0x3d, 0x20, 0x00, 0x00, 0x00, // i
    0x00, 0x20, 0x40, 0x40, 0x3d, 0x00, 0x00, 0x00, // j
    0x00, 0x3f, 0x0c, 0x12, 0x20, 0x00, 0x00, 0x00, // k
    0x00, 0x1f, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, // l
    0x00, 0x3e, 0x02, 0x3c, 0x02, 0x3c, 0x00, 0x00, // m
    0x00, 0x3e, 0x02, 0x02, 0x02, 0x3c, 0x00, 0x00, // n
    0x00, 0x1c, 0x22, 0x22, 0x22, 0x1c, 0x00, 0x00, // o
    0x00, 0xfc, 0x24, 0x24, 0x24, 0x18, 0x00, 0x00, // p
    0x00, 0x18, 0x24, 0x24, 0x24, 0xfc, 0x00, 0x00, // q
    0x00, 0x3e, 0x04, 0x02, 0x02, 0x00, 0x00, 0x00, // r
    0x00, 0x24, 0x2a, 0x2a, 0x2a, 0x10, 0x00, 0x00, // s
    0x00, 0x02, 0x1f, 0x22, 0x20, 0x00, 0x00, 0x00, // t
    0x00, 0x1e, 0x20, 0x20, 0x20, 0x1e, 0x00, 0x00, // u
    0x00, 0x06, 0x18, 0x20, 0x18, 0x06, 0x00, 0x00, // v
    0x00, 0x1e, 0x30, 0x1c, 0x30, 0x1e, 0x00, 0x00, // w
    0x00, 0x22, 0x14, 0x08, 0x14, 0x22, 0x00, 0x00, // x
    0x00, 0x1c, 0xa0, 0xa0, 0xa0, 0x7c, 0x00, 0x00, // y
    0x00, 0x22, 0x32, 0x2a, 0x26, 0x22, 0x00, 0x00, // z
    0x00, 0x0c, 0x3f, 0x21, 0x00, 0x00, 0x00, 0x00, // {
    0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // |
    0x00, 0x21, 0x3f, 0x0c, 0x00, 0x00, 0x00, 0x00, // }
    0x00, 0x02, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00, // ~
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 128
];
